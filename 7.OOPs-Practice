class Employee:
    def __init__(self, ename, desg, sal, otc, ots="False"):
        self.employee_name = ename
        self.designation = desg
        self.salary = sal
        self.overTimeContribution = otc
        self.overTimeStatus = ots


class Organization(Employee):
    def __init__(self, elst):
        self.employee_list = elst

    def overtimestatus(self, overtimethreshold):
        for i in self.employee_list:
            if (int(sum(i.overTimeContribution.values())) >= int(overtimethreshold)):
                i.overTimeStatus = "True"
        return self.employee_list

    def totalamount(self, overtimehour):
        total = 0
        for i in self.employee_list:
            if i.overTimeStatus == "True":
                total += int(sum(i.overTimeContribution.values())) * overtimehour
        return total


a = int(input("Enter the number of Employees: "))
lst = []
for i in range(a):
    emp_name = input(f"Enter the {i+1} Employee Name: ")
    desgi = input(f"Enter {emp_name}'s designation: ")
    sal = int(input(f"Enter {emp_name}'s salary: "))
    b = int(input(f"Enter the no.of months: "))
    dct = {}
    for j in range(b):
        mon = input(f"Enter the name of {j+1} month: ")
        bon = int(input(f"Enter the {mon} month's working hours: "))
        dct[mon.lower()] = bon
    obj = Employee(emp_name, desgi, sal, dct)
    lst.append(obj)
obj = Organization(lst)
overtimethreshold = int(input("Enter the Overtime Threshold: "))
rateperhour = int(input("Enter the rate per hour: "))
lst = obj.overtimestatus(overtimethreshold)
for i in lst:
    print(i.employee_name, i.overTimeStatus)
total = obj.totalamount(rateperhour)
print(f"Total Bonus to be paid = {total}")
